---
import "@astrojs/site-kit/tailwind.css"
import "@fontsource/inter/variable.css"
import "../styles/fonts.css"

import Inter from "@fontsource/inter/files/inter-latin-variable-wghtOnly-normal.woff2"
import { Icon } from "astro-icon"
import AstroLogo from "../components/AstroLogo.astro"
import Card, { type Props as CardProps } from "../components/Card.astro"
import Outlinks from "../components/Outlinks.astro"
import PageTitle from "../components/PageTitle.astro"
import { mainSiteLink, socialLinks } from "../data/links"
import type { Example } from "../utils/index"
import { TOP_SECTION } from "../utils/index"

type Props = { examples: Array<[string, Example[]]> }
const { examples: groups } = Astro.props as Props

const pathname = Astro.url.pathname.replace(/\/$/, "")
---

<html lang="en" class="bg-astro-gray-700 text-astro-gray-100">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="alternate icon" type="image/x-icon" href="/favicon.ico" />

		<link
			rel="preload"
			href="/fonts/Obviously/Obviously Normal/Web/Obviously-Regular.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/>

		<link
			rel="preload"
			href="/fonts/MD IO/Web/MDIO0.5-Regular.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/>

		<link rel="preload" href={Inter} as="font" type="font/woff2" crossorigin />

		<meta name="viewport" content="width=device-width" />
		<title>astro.new{pathname}</title>
		<meta
			name="description"
			content="Quickly launch example Astro projects in your favorite browser IDE!"
		/>

		<!-- Fathom - beautiful, simple website analytics -->
		<script
			src="https://certain-quality.astro.build/script.js"
			data-site="EZBHTSIG"
			defer
		></script>
	</head>

	<body>
		<header
			class="noise-panel flex h-24 items-center gap-6 border-b border-astro-gray-500 px-8"
		>
			<a href="/" class="transition hover:opacity-75" title="Home">
				<AstroLogo class="h-14 w-10 translate-y-1 object-top" />
			</a>
			<div class="h-10 border-r border-white/25"></div>
			<a href="/" class="transition hover:opacity-75">
				<h1 class="-translate-y-0.5 font-obviously-wide text-xl tracking-wider">
					astro.new
				</h1>
			</a>
			<div class="flex-1"></div>
			{
				socialLinks.map((link) => (
					<a
						href={link.href}
						title={link.title}
						class="transition hover:opacity-75"
					>
						<Icon name={link.icon} class="s-8" />
					</a>
				))
			}
			<a href={mainSiteLink} class="button button-primary font-medium">
				Visit astro.build
			</a>
		</header>
		<PageTitle>
			<Fragment slot="title">
				<span>astro.new</span>{
					pathname !== "" && (
						<>
							<span class="px-[0.1em] font-normal text-secondary-300">/</span>
							<span>{pathname.substring(1)}</span>
						</>
					)
				}
			</Fragment>
			<div class="max-w-prose space-y-4">
				<p><strong>Welcome to Astroâ€™s official example projects!</strong></p>
				<p>
					Each of these templates is meant to show a common pattern or use case:
					different kinds of websites, various integrations included
					automatically, or how to work with common tools.
				</p>
				<p>
					Open these in your choice of online code editor right in your browser,
					or click the GitHub logo to see its source code!
				</p>
			</div>
		</PageTitle>

		<main
			class="mx-auto flex max-w-screen-xl flex-col px-4 pt-8 sm:px-6 sm:pt-12 lg:px-8 lg:pt-16"
		>
			<ul class="templates mb-24 flex flex-col gap-24">
				{
					groups.map(([category, examples]) => {
						return (
							<li class="flex flex-col gap-8">
								<h2
									class:list={[
										"text-2xl",
										{ "sr-only": category === TOP_SECTION },
									]}
								>
									{category}
								</h2>
								<ul class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3 lg:gap-6">
									{examples.map(
										(
											example: astroHTML.JSX.IntrinsicAttributes & CardProps,
										) => (
											<li>
												<Card {...example} />
											</li>
										),
									)}
									{category === TOP_SECTION && <Outlinks />}
								</ul>
							</li>
						)
					})
				}
			</ul>
		</main>
	</body>
</html>

<script>
	// find all internal links, this will pickup all redirects handled by the redirect function
	document
		.querySelectorAll<HTMLAnchorElement>("a[href^='/']")
		.forEach((link) => {
			link.addEventListener("click", () => {
				/** @ts-ignore */
				window.fathom.trackPageview({
					url: link.href,
				})
			})
		})
</script>
